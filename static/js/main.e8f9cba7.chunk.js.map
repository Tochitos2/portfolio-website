{"version":3,"sources":["components/Container/index.js","components/NavBar/NavBarElements.js","components/NavBar/index.js","components/Projects/ProjectsElements.js","components/Projects/index.js","components/About/index.js","components/CV/index.js","components/Contact/index.js","components/ThemeToggleButton/index.js","App.js","reportWebVitals.js","index.js"],"names":["Container","StyledContainer","id","this","props","children","document","body","style","margin","setHeight","window","addEventListener","bind","removeEventListener","getElementById","height","scrollHeight","React","Component","styled","div","theme","backgroundInvert","SectionTitle","h2","fontFamily","fontWeight","textColour","borderColour","primary","Button","a","text","span","TitleWrapper","Title","h1","Subtitle","p","NavBar","to","smooth","duration","offset","onClick","scroll","scrollToTop","Project","ProjectCard","className","open","href","float","title","Description","description","Icon","src","iconPath","alt","altText","h3","img","ProjectsContainer","section","Projects","state","projects","map","project","setAlignment","columnCount","currentTop","prevTop","items","getElementsByClassName","i","length","getBoundingClientRect","top","newProjects","finalRowWidth","column","cardsOnRow","Math","ceil","setState","About","AboutContainer","StandOut","Paragraph","CV","CVContainer","PDFPanel","width","type","iframe","Contact","isVerified","console","log","ContactBody","VerifyBody","sitekey","render","email","split","reverse","join","ThemeToggleButton","ToggleContainer","OnClick","toggleIcon","lightTheme","secondary","darkTheme","App","useState","setTheme","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.e8f9cba7.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\nclass Container extends React.Component {\r\n    render() {\r\n        return (\r\n            <StyledContainer id=\"container\">\r\n                {this.props.children}\r\n            </StyledContainer>        \r\n        );\r\n    } \r\n\r\n    componentDidMount() {\r\n        // Fix for body rendering with 8px margin.\r\n        document.body.style.margin = 0;\r\n        this.setHeight();\r\n\r\n        window.addEventListener('resize', this.setHeight.bind(this));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.setHeight);\r\n    }\r\n\r\n    // The container height was acting glitchy with 100% height / min-height failing so this is my jank fix.\r\n    setHeight() {\r\n        document.getElementById('container').style.height = 'auto';\r\n        document.getElementById('container').style.height = document.getElementById('root').scrollHeight + 'px';\r\n    }\r\n}\r\n\r\nconst StyledContainer = styled.div`\r\n    \r\n    position: relative;\r\n    margin: 0;\r\n    padding: 0;\r\n\r\n\r\n    // Background image is handled in a psuedo-element to ensure the   \r\n    // filter is only applied to the image and no other elements.\r\n    :before {\r\n        content: \"\";\r\n        position: absolute;\r\n        z-index: -1;\r\n        top: 0; left: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        background-image: url('background.jpg');\r\n        background-size: cover;\r\n        background-repeat: repeat-y;\r\n        \r\n        min-height: 100%;\r\n        min-width: 100%;\r\n\r\n        // Theme handling\r\n        transition-duration: 0.5s;\r\n        transition-timing-function: ease-in-out;\r\n        filter: invert(${ props => props.theme.backgroundInvert });\r\n    }   \r\n`;\r\n\r\nexport default Container;\r\n\r\nexport const SectionTitle = styled.h2`\r\ntext-align: center;\r\nfont-family: ${ props => props.theme.fontFamily };\r\nfont-weight: ${ props => props.theme.fontWeight };\r\ncolor: ${ props => props.theme.textColour };\r\nfont-size: 2rem;\r\nmargin-top: 3rem;\r\nmargin-bottom: 4rem;\r\n-webkit-margin-collapse: none;\r\n\r\n// Psuedo-elements to create seperator lines to each side of section title.\r\n::before {\r\n    content: \"\";\r\n    display: inline-block;\r\n    margin-bottom: 0.4rem;\r\n    margin-right: 0.5rem;\r\n    height: 0;\r\n    width: 30%;\r\n    border-bottom: 2px solid ${props => props.theme.borderColour};\r\n\r\n    @media(max-width: 350px) {\r\n        width: 20%;\r\n    }\r\n}\r\n::after {\r\n    content: \"\";\r\n    display: inline-block;\r\n    margin-bottom: 0.4rem;\r\n    margin-left: 0.5rem;\r\n    height: 0;\r\n    width: 30%;\r\n    border-bottom: 2px solid ${props => props.theme.borderColour};\r\n\r\n    @media(max-width: 350px) {\r\n        width: 20%;\r\n    }\r\n}\r\n`;","import styled, { css } from 'styled-components';\r\n\r\nconst fontFamily = props => props.theme.fontFamily;\r\nconst fontWeight = props => props.theme.fontWeight;\r\n\r\nexport const Container = styled.div`\r\n    position: sticky;\r\n    position: -webkit-sticky;\r\n    top: 0;\r\n    z-index: 2;\r\n    display: grid;\r\n    grid-template-columns: 2fr 1fr 1fr auto 1fr 1fr 2fr;\r\n    width: 100%;\r\n    align-items: center;\r\n    text-transform: uppercase;\r\n    font-family: ${ fontFamily };\r\n    font-weight: ${ fontWeight };\r\n    color: ${ props => props.theme.textColour };\r\n    border-bottom: 1px solid ${ props => props.theme.borderColour };\r\n    background-color: ${ props => props.theme.primary };\r\n    opacity: 90%;\r\n    transition-duration: 0.5s;\r\n    transition-timing-function: ease-in-out;\r\n\r\n    @media (max-width: 750px) {\r\n        grid-template-columns: 0 0 0 auto 0 0 0;\r\n    }\r\n`;\r\n\r\nexport const Button = styled.a`\r\n    color: ${props => props.theme.text};\r\n    grid-column: ${props => props.span[0] + \"/\" + props.span[1]};\r\n    text-align: center;\r\n    align-self: flex-end; \r\n    font-family: ${ fontFamily };\r\n    font-weight: ${ fontWeight };\r\n    cursor: pointer;\r\n    padding: 0.5rem;\r\n    margin-bottom: 0.5rem;\r\n    font-size: 1.5rem;\r\n\r\n    // Underline on hover animation using psuedo elements to allow custom width borders.  \r\n    ::after {\r\n        content: \"\";\r\n        display: block;\r\n        width: 0;\r\n        margin-left: 50%;\r\n        padding-top: 0.3rem;\r\n        border-bottom: 2px solid ${ props => props.theme.borderColour };\r\n\r\n        transition-duration: 0.1s;\r\n        transition-timing-function: ease-in-out;\r\n    }\r\n    :hover::after {\r\n        margin-left: 15%;\r\n        width: 70%;\r\n    }\r\n\r\n    @media (max-width: 750px) {\r\n        display: none;\r\n    }\r\n\r\n`;\r\n\r\nexport const TitleWrapper = styled.div`\r\n    grid-column: ${props => props.span[0] + \"/\" + props.span[1]};\r\n    text-align: center;\r\n    font-family: ${ fontFamily };\r\n    font-weight: ${ fontWeight };\r\n    margin: 0.5rem 4rem 0.5rem 4rem;\r\n    cursor: pointer;\r\n\r\n    @media (max-width: 850px) {\r\n        margin: 0.5rem 1rem;\r\n    }\r\n    `;\r\n\r\nexport const Title = styled.h1`\r\n    text-align: center;\r\n    font-family: ${ fontFamily };\r\n    font-weight: ${ fontWeight };\r\n    margin: 0;\r\n    font-size: 3rem;\r\n\r\n    @media (max-width: 350px) {\r\n        font-size: 2rem;\r\n    }\r\n    `;\r\n\r\nexport const Subtitle = styled.p`\r\n    text-align: center;\r\n    font-family: ${ fontFamily };\r\n    font-weight: ${ fontWeight };\r\n    margin: 0;\r\n    text-transform: none;\r\n    font-style: italic;\r\n    font-size: 1.1rem;\r\n\r\n    @media (max-width: 350px) {\r\n        font-size: 0.7rem;\r\n    }\r\n    `;","import React from 'react';\r\nimport { animateScroll as scroll, Link } from 'react-scroll';\r\nimport { Container, Button, TitleWrapper, Title, Subtitle } from './NavBarElements';\r\n\r\nclass NavBar extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            \r\n        <Container>                  \r\n            <Button span={[2,3]}>\r\n                <Link to=\"projects\" smooth={true} duration={500} offset={-150}>Projects</Link>\r\n            </Button>\r\n            \r\n            <Button span={[3,4]}>\r\n                <Link to=\"about\" smooth={true} duration={500} offset={-150}>About</Link>\r\n            </Button>\r\n\r\n            <TitleWrapper span={[4,5]} onClick={scroll.scrollToTop}>\r\n                <Title>Tom Angus</Title>\r\n                <Subtitle>Comp-Sci Student</Subtitle>\r\n            </TitleWrapper>\r\n\r\n            <Button  span={[5,6]}>\r\n                <Link to=\"cv\" smooth={true} duration={500} offset={-150}>CV</Link>\r\n            </Button>\r\n\r\n            <Button span={[6,7]}>\r\n                <Link to=\"contact\" smooth={true} duration={500} offset={-150}>Contact</Link>\r\n            </Button>\r\n        </Container>\r\n            \r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\nclass Project extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <ProjectCard className= { this.props.className } onClick={ () => window.open( this.props.href ) }>\r\n                <Title float={ this.props.float }> { this.props.title } </Title>\r\n                <Description float={ this.props.float }> { this.props.description } </Description>\r\n                <Icon float={ this.props.float } src={`./icons/${this.props.iconPath}`} alt={this.props.altText} />\r\n            </ProjectCard>\r\n        );        \r\n    }\r\n\r\n}\r\n\r\nexport default Project;\r\n\r\nconst ProjectCard = styled.div`\r\n    cursor: pointer;\r\n    flex: 0 0 min(30rem, 100%);\r\n    margin: 0 1rem 2rem 1rem;\r\n    border: 1px solid ${ props => props.theme.borderColour };\r\n\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr 1fr;\r\n    grid-template-rows: 0.5fr 1fr;\r\n    position: relative;\r\n    transition-duration: 0.5s;\r\n    transition-timing-function: ease-in-out;\r\n    \r\n    ::before {\r\n        content: \"\";\r\n        position: absolute;\r\n        top: 0; \r\n        left: 0;\r\n        width: 100%; \r\n        height: 100%;  \r\n        opacity: 55%; \r\n        z-index: -1;\r\n        background-color: ${ props => props.theme.primary };\r\n    }\r\n`;\r\n\r\nconst Title = styled.h3`\r\n    font-family: ${ props => props.theme.fontFamily };\r\n    font-weight: ${ props => props.theme.fontWeight };\r\n    font-size: 1.5rem;\r\n    grid-row: 1 / 2;\r\n    grid-column: ${ props => props.float === \"left\" ? \"1 / 4\" : \"2 / 5\" };\r\n    text-align: ${ props => props.float };\r\n    margin-${props => props.float}: 1rem;\r\n    margin-top: 1rem;\r\n    margin-bottom: 0;    \r\n`;\r\n\r\nconst Description = styled.p`\r\n    font-family: ${ props => props.theme.fontFamily };\r\n    font-weight: ${ props => props.theme.fontWeight };\r\n    grid-row: 2 / 3;\r\n    grid-column: ${ props => props.float === \"left\" ? \"1 / 4\" : \"2 / 5\" };\r\n    text-align: ${ props => props.float };\r\n    margin-${props => props.float}: 1rem;   \r\n    margin-top: 1rem;\r\n    margin-bottom: 1rem;\r\n`;\r\n\r\nconst Icon = styled.img`\r\n    display: block;\r\n    align-self: center;\r\n    grid-row: 1 / 3;\r\n    width: 60%; \r\n    height: auto;\r\n    grid-column: ${ props => props.float === \"left\" ? \"4 / 5\" : \"1 / 2\" };\r\n    margin-${props => props.float}: auto;\r\n    margin-${props => (props.float === \"left\") ? \"right\" : \"left\"}: 1rem;\r\n    filter: invert(${props => props.theme.backgroundInvert});\r\n`;\r\n\r\nexport const ProjectsContainer = styled.section`\r\n    margin: 2rem 10vw 8rem 10vw;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    color: ${ props => props.theme.textColour };\r\n\r\n    @media (max-width: 500px) {\r\n        margin: 2rem 5vw;\r\n    }\r\n`;","import React from 'react';\r\nimport Project, {ProjectsContainer} from './ProjectsElements';\r\nimport {SectionTitle} from '../Container';\r\n\r\nclass Projects extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { \r\n            // Array holding the details of each project to be displayed, used for automatic JSX generation.\r\n            projects: [\r\n                { title: \"Portfolio Website\", description: \"This very site, coded in ReactJS.\", href: \"https://github.com/Tochitos2/portfolio-website\", iconPath: \"react.svg\", altText: \"React Javascript icon\" },\r\n                { title: \"Text Analyser\", description: \"A text analyser with additional tools for analysing literature, such as dialogue filtering and blacklists, written in Java.\", href: \"https://github.com/Tochitos2/TextAnalyser\", iconPath: \"java.svg\", altText: \"\" },\r\n                { title: \"Divine Gifts SV Mod\", description: \"A Stardew Valley game mod written in C#, using PathosChild's SMAPI modding API.\", href: \"https://github.com/Tochitos2/Stardew-Valley.Divine-Gifts-Mod\", iconPath: \"c-sharp.svg\", altText: \"\" },\r\n                { title: \"Student Webpanel\", description: \"A PHP login system that allows the viewing of student data fetched via MySQL.\", href: \"https://github.com/Tochitos2/CO323-Assignment2-PHP-MySQL\", iconPath: \"php.svg\", altText: \"\" },\r\n                { title: \"Jack Recursive Descent Parser\", description: \"A recursive descent parser for the Jack language, including a symbol table. Written in Java.\", href: \"https://github.com/Tochitos2/Jack-Recursive-Descent-Parser\", iconPath: \"java.svg\", altText: \"\" },\r\n                { title: \"Cipher Cracking Tools\", description: \"A selection of command-line tools for cracking ceasar and transposition ciphers, written in Haskell and Python.\", href: \"https://github.com/Tochitos2/ciphercracking\", iconPath: \"code.svg\", altText: \"\" }\r\n            ]\r\n        };    \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"projects\">\r\n                <SectionTitle>Projects</SectionTitle>\r\n\r\n                <ProjectsContainer>\r\n                    {this.state.projects.map((project) => {\r\n                        return (<Project className=    \"project-card\" \r\n                                         key=          {project.title}\r\n                                         title=        {project.title} \r\n                                         description=  {project.description} \r\n                                         href=         {project.href} \r\n                                         iconPath=     {project.iconPath}\r\n                                         altText=      {project.altText}\r\n                                         float=        {project.float} />);\r\n                    })}\r\n                </ProjectsContainer>               \r\n            </ div>\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setAlignment();\r\n\r\n        // Recalculate and update card alignment when window size changes.\r\n        window.addEventListener('resize', this.setAlignment.bind(this));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.setAlignment.bind(this));\r\n    }\r\n\r\n    /**\r\n     * Updates state to correct project card alignment.\r\n     */\r\n    setAlignment() {\r\n        // Get the number of columns at current render (on a full row).\r\n        let columnCount = 0;\r\n        let currentTop = 0, prevTop = 0;\r\n        const items = document.getElementsByClassName(\"project-card\");\r\n        for(let i=0; i < items.length; i++) {\r\n            currentTop = items[i].getBoundingClientRect().top;\r\n            if(i !==0 && currentTop !== prevTop) break;\r\n            columnCount++;\r\n            prevTop = currentTop;\r\n        }\r\n\r\n        // Create a copy of the project array from state with updated floats\r\n        let newProjects = this.state.projects;\r\n        // Get the width of the final row, as this may be smaller than the rest.\r\n        let finalRowWidth = this.state.projects.length % columnCount;\r\n        \r\n        for(let i = 0; i < this.state.projects.length; i++) {\r\n            // Find the x value in the grid, i.e. the column number at current rendering.\r\n            let column = (i + 1) % columnCount;\r\n            // Is the card on the final row?\r\n            let isOnFinalRow = i + 1 > this.state.projects.length - finalRowWidth;\r\n            // If card is on final row, use that row width instead.\r\n            let cardsOnRow = isOnFinalRow ? finalRowWidth : columnCount;\r\n\r\n            // Pass the appropriate float prop for that card's position.\r\n            newProjects[i].float = ((column !== 0 || columnCount === 1) && column <= Math.ceil(cardsOnRow / 2) ) ? \"left\" : \"right\";\r\n        }\r\n        // Update state to hold revised projects array.\r\n        this.setState({ projects: newProjects });\r\n    }\r\n\r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { SectionTitle } from '../Container';\r\n\r\nexport default class About extends React.Component{\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                <SectionTitle id=\"about\">About</SectionTitle>  \r\n\r\n\r\n                <AboutContainer>\r\n                <StandOut>Hi! </StandOut>\r\n                <Paragraph>{text[0]}</Paragraph>\r\n                <br/> <br/>\r\n                <Paragraph>{text[1]}</Paragraph>\r\n                <br/> <br/>\r\n                <Paragraph>{text[2]}</Paragraph>\r\n                </AboutContainer>\r\n            </>\r\n        );\r\n    }\r\n}\r\nconst AboutContainer = styled.div`\r\n    margin: 3rem 20vw 8rem 20vw;\r\n\r\n    @media (max-width: 650px) {\r\n        margin: 2rem 10vw;\r\n    }\r\n`;\r\n\r\nconst Paragraph = styled.p`\r\n    font-family: ${props => props.theme.fontFamily};\r\n    font-weight: ${props => props.theme.fontWeight};\r\n    font-size: 1.5rem;\r\n    color: ${props => props.theme.textColour};\r\n    display: inline;\r\n\r\n    @media (max-width: 650px) {\r\n        font-size: 1rem;\r\n    }\r\n`;\r\n\r\nconst StandOut = styled(Paragraph)`\r\n    display: inline;\r\n    font-size: 4rem;\r\n    font-weight: normal;\r\n    font-style: italic;\r\n    padding-right: 1.5rem;\r\n\r\n    @media (max-width: 650px) {\r\n        font-size: 2.5rem;\r\n        padding-right: 1rem;\r\n    }\r\n`;\r\n\r\nconst text = [\"I'm a second year Computer Science student with an interest in Cyber Security, Web Design, Reverse Engineering, Game Modding, and using computer science to advance our climate change response and create a positive social impact.\", \r\n\"In 2020 I was the vice president of the Kent University Cybersecurity Society, where I focused on providing educational hands-on sessions on security practices, threats, and responsible penetration testing.\", \r\n\"I'm currently looking for a Year in Industry placement, so please check out some of my work and my CV below!\"];\r\n","import styled, { css } from 'styled-components';\r\nimport React from 'react';\r\nimport { SectionTitle } from '../Container';\r\n\r\nclass CV extends React.Component {\r\nrender() {\r\n    return (\r\n        <>\r\n            <SectionTitle id=\"cv\">CV</SectionTitle>\r\n            <CVContainer>\r\n                <PDFPanel src='./CV.pdf' width='60vw' height='40vw' type='application/pdf'/>\r\n            </CVContainer>\r\n        </>\r\n    );\r\n}\r\n}\r\n\r\nexport default CV;\r\n\r\nconst CVContainer = styled.div`\r\n    margin: 2rem 20vw 8rem 20vw;\r\n    width: auto;\r\n    height: 70vh;\r\n    display: grid;\r\n    place-items: center;\r\n\r\n    @media (max-width: 650px) {\r\n        margin: 2rem 10vw;\r\n    }\r\n`;\r\n\r\nconst PDFPanel = styled.iframe`\r\n    align-self: center;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    height: 100%;\r\n    width: 100%;   \r\n`;","import styled, { css } from 'styled-components';\r\nimport React from 'react';\r\nimport Recaptcha from 'react-recaptcha';\r\nimport { SectionTitle } from '../Container';\r\n\r\nclass Contact extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { isVerified: false };\r\n    }\r\n\r\n    render() {\r\n        const reveal = () => {\r\n            console.log(\"clicked\");\r\n            this.setState({isVerified : true});\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <SectionTitle id=\"contact\">Contact</SectionTitle>\r\n                <button onClick={reveal}>Reveal</button>\r\n                {this.state.isVerified ? ContactBody : VerifyBody}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;\r\n\r\nconst Paragraph = styled.p`\r\n    font-family: ${props => props.theme.fontFamily};\r\n    font-weight: ${props => props.theme.fontWeight};\r\n    font-size: 1.5rem;\r\n    color: ${props => props.theme.textColour};\r\n    display: inline;\r\n`;\r\n\r\nconst VerifyBody = (\r\n    <>\r\n        <Paragraph>Please use the Recaptcha below to access contact information.</Paragraph>\r\n        <Recaptcha\r\n            sitekey=\"xxxxxxxxxxxxxxxxxxxx\"\r\n            render=\"explicit\"\r\n            \r\n        />\r\n    </>\r\n);\r\n// email is written backwards to deter bots from scraping it from the repo.\r\nconst email = \"moc.liamg@krow.sugna.samoht\".split(\"\").reverse(\"\").join(\"\");\r\n\r\nconst ContactBody = (\r\n    <Paragraph>{email}</Paragraph>\r\n);\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nclass ThemeToggleButton extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <ToggleContainer onClick={this.props.OnClick}>\r\n                <Icon src={`./icons/${this.props.toggleIcon}`}/>\r\n            </ToggleContainer>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default ThemeToggleButton;\r\n\r\nconst ToggleContainer = styled.div`\r\n    position: sticky;\r\n    position: -webkit-sticky;\r\n    right: 0;\r\n    bottom: 5vh;\r\n    float: right;\r\n    z-index: 3;\r\n\r\n    display:grid;\r\n    place-items: center;\r\n\r\n    width: min(6rem, 15vw);\r\n    height: 4rem;\r\n    background-color: ${ props => props.theme.primary };\r\n    border-top: 1.5px solid ${ props => props.theme.borderColour };\r\n    border-bottom: 1.5px solid ${ props => props.theme.borderColour };\r\n    border-left: 1.5px solid ${ props => props.theme.borderColour };\r\n    cursor: pointer;\r\n`;\r\n\r\nconst Icon = styled.img`\r\n    display: block;\r\n    width: auto;\r\n    height: 70%;\r\n`;","import react, { useState } from 'react';\nimport {ThemeProvider} from 'styled-components';\n\nimport Container from './components/Container';\nimport NavBar from './components/NavBar';\nimport Projects from './components/Projects';\nimport About from './components/About';\nimport CV from './components/CV';\nimport Contact from './components/Contact';\nimport ThemeToggleButton from './components/ThemeToggleButton';\n\n\nconst lightTheme = {\n  primary: '#FFF',\n  secondary: '#000',\n  textColour: '#000',\n  fontFamily: \"'Raleway', sans-serif\",\n  fontWeight: '300',\n  borderColour: '#AAA',\n  backgroundInvert: 0,\n  toggleIcon: \"sunset.svg\"\n};\n\nconst darkTheme = {\n  primary: '#000',\n  secondary: '#FFF',\n  textColour: '#FFF',\n  fontFamily: \"'Raleway', sans-serif\",\n  fontWeight: '300',\n  borderColour: '#EEE',\n  backgroundInvert: 1,\n  toggleIcon: \"sunrise.svg\"\n}\n\nfunction App() {\n  const [theme, setTheme] = useState('dark');\n\n  const toggleTheme = () => {\n    if(theme === 'light') {\n      setTheme('dark');\n    }\n    else {\n      setTheme('light');\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n      <Container>\n        <NavBar />\n        <Projects />\n        <About />\n        <CV />\n        <Contact />\n        <ThemeToggleButton OnClick={ toggleTheme } toggleIcon= { theme === 'light' ? lightTheme.toggleIcon : darkTheme.toggleIcon }/>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}